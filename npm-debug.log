0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@3.10.3
3 info using node@v6.3.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'A:\\Docs\\code\\node\\modules\\wsocket.io',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\Daniel\AppData\Roaming\npm-cache\wsocket.io\0.1.0\package.tgz not in flight; packing
9 verbose correctMkdir C:\Users\Daniel\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
10 info lifecycle wsocket.io@0.1.0~prepublish: wsocket.io@0.1.0
11 silly lifecycle wsocket.io@0.1.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ 'C:\\Users\\Daniel\\AppData\\Roaming\\npm-cache\\wsocket.io\\0.1.0\\package.tgz',
12 verbose tar pack   'A:\\Docs\\code\\node\\modules\\wsocket.io' ]
13 verbose tarball C:\Users\Daniel\AppData\Roaming\npm-cache\wsocket.io\0.1.0\package.tgz
14 verbose folder A:\Docs\code\node\modules\wsocket.io
15 verbose addLocalTarball adding from inside cache C:\Users\Daniel\AppData\Roaming\npm-cache\wsocket.io\0.1.0\package.tgz
16 verbose correctMkdir C:\Users\Daniel\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
17 silly cache afterAdd wsocket.io@0.1.0
18 verbose afterAdd C:\Users\Daniel\AppData\Roaming\npm-cache\wsocket.io\0.1.0\package\package.json not in flight; writing
19 verbose correctMkdir C:\Users\Daniel\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
20 verbose afterAdd C:\Users\Daniel\AppData\Roaming\npm-cache\wsocket.io\0.1.0\package\package.json written
21 silly publish { name: 'wsocket.io',
21 silly publish   version: '0.1.0',
21 silly publish   description: 'ES6 ws wrapper for client and server for ease of use.',
21 silly publish   main: 'index.js',
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/danielkov/wsocket.io.git' },
21 silly publish   keywords: [ 'node', 'js', 'javascript', 'client', 'server', 'ws', 'websocket' ],
21 silly publish   author: { name: 'Daniel Kovacs', email: 'kovacsemod@gmail.com' },
21 silly publish   license: 'ISC',
21 silly publish   bugs: { url: 'https://github.com/danielkov/wsocket.io/issues' },
21 silly publish   homepage: 'https://github.com/danielkov/wsocket.io#readme',
21 silly publish   dependencies: { ws: '^1.1.1' },
21 silly publish   readme: '# WSocket.io\r\n\r\nSimple ws wrapper written with ES6 syntax for ease of use.\r\n\r\n### Browser support\r\n\r\nClient code needs to be transpiled with something like [Babel](https://babeljs.io/) to work in all browsers. Currently only browsers supporting WebSocket API are supported (no fallback to AJAX).\r\n\r\n### Simple use\r\n\r\nserver.js\r\n```js\r\nconst SocketServer = require(\'wsocket.io\').Server;\r\n\r\n/*\r\nDefault port is 8080\r\n*/\r\nlet wss = new SocketServer()\r\n\r\nwss.connect((ws) => {\r\n  ws.send(\'welcome\', {message:\'hello world\'});\r\n  ws.on(\'reply\', (data) => {\r\n    console.log(data);\r\n  })\r\n})\r\n```\r\n\r\nclient.js\r\n```js\r\nimport Client from wsocket.io;\r\n\r\n/*\r\nDefault port is 8080\r\n*/\r\nlet client = new Client();\r\n\r\nclient.on(\'welcome\', (data) => {\r\n  console.log(data);\r\n  ws.send(\'reply\', {message: \'hello back\'});\r\n})\r\n\r\nclient.off();\r\n```\r\n\r\n## Supported methods\r\n\r\n### Client\r\n\r\n### `.constructor([url: String <optional>])`\r\nThe parameter is the url to open a WebSocket connection with. This defaults to `window.location.hostname` on port: 8080.\r\n\r\n### `.on([name: String], [fn: function <callback>])`\r\nHandles incoming messages matching the name provided in the first parameter.\r\n\r\n### `.send([name: String], [data: Object])`\r\nSends a message to the server with the name of first parameter and the data in the form of a stringified object.\r\n\r\n### `.off([fn: function <callback, optional>])`\r\nCloses open WebSocket connection if there is one and executes callback. If there aren\'t any open connections the callback will receive an error. If no callback is provided an Error will be thrown.\r\n\r\n\r\n### Server\r\n\r\n### `.constructor([opts: Object])`\r\nSends the `opts` object into the original ws Server constructor. Defaults to `{port: 8080}`.\r\n\r\n### `.connect([fn: function <callback>])`\r\nThe callback handles each separate incoming connection. It receives a single Socket object (read below).\r\n\r\n### `.send([name: String], [data: Object])`\r\nSends the data in the form of a stringified object to each open connection.\r\n\r\n### `.sendTo([id: String], [name: String], [data: Object])`\r\nSends the data to the socket with the id provided in the first parameter.\r\n\r\n### `.sendExclude([id: String], [name: String], [data: Object])`\r\nSends the data to all the sockets excluding the one with the id in the first parameter. This is the underlying method of `Socket.broadcast()`.\r\n\r\n### `.close()`\r\nCloses the server.\r\n\r\n\r\n### Socket\r\n\r\n### `.constructor([ws: WebSocket], [id: String], [handler: Object <Server>])`\r\nCreates a new Socket object and assigns an id, which is stored in `Server._sockets` object by id.\r\n\r\n### `.on([name: String], [fn: function <callback>])`\r\nHandles incoming messages matching the name provided in the first parameter.\r\n\r\n### `.send([name: String], [data: Object])`\r\nSends a message to the socket in the form of a stringified object.\r\n\r\n### `.broadcast()`\r\nSends a message to all sockets but the current one, using the server\'s `sendExclude()` method.\r\n\r\n### `.off()`\r\nRemoves socket from the handled sockets. Triggered automatically when socket closes on the client side.\r\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '59413e1d0ef9c8d4ca82d69e0ab2240513c99e4b',
21 silly publish   _id: 'wsocket.io@0.1.0',
21 silly publish   _shasum: 'ea7499b4850d7de4183963c7173e871f3433880f',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name wsocket.io
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'wsocket.io',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'wsocket.io',
26 silly mapToRegistry   name: 'wsocket.io',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/wsocket.io
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading C:\Users\Daniel\AppData\Roaming\npm-cache\wsocket.io\0.1.0\package.tgz
30 verbose request uri https://registry.npmjs.org/wsocket.io
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 5:07:17 PM
33 verbose request using bearer token for auth
34 verbose request id 7bbf330dfa353f35
35 http request PUT https://registry.npmjs.org/wsocket.io
36 http 403 https://registry.npmjs.org/wsocket.io
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Sat, 19 Nov 2016 16:07:16 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-fra1239-FRA',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1479571635.051621,VS0,VE960',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating C:\Users\Daniel\AppData\Roaming\npm-cache\registry.npmjs.org\wsocket.io on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 0.1.0." : wsocket.io
40 verbose stack     at makeError (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:252:14)
40 verbose stack     at Request._callback (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:172:14)
40 verbose stack     at Request.self.callback (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:200:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1067:10)
40 verbose stack     at emitOne (events.js:101:20)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:988:12)
41 verbose statusCode 403
42 verbose pkgid wsocket.io
43 verbose cwd A:\Docs\code\node\modules\wsocket.io
44 error Windows_NT 6.1.7601
45 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
46 error node v6.3.0
47 error npm  v3.10.3
48 error code E403
49 error "You cannot publish over the previously published version 0.1.0." : wsocket.io
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
